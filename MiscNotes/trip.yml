# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master
    resources:
    - repo: self
    
    variables:
      # Container registry service connection established during pipeline creation
      dockerRegistryServiceConnection: 'e2ecdeca-e4de-4e1a-822c-f0da33cc2729'
      imageRepository: 'devopsoh/api-trips'
      containerRegistry: 'openhack98t80iv1acr.azurecr.io'
      dockerfilePath: '$(Build.SourcesDirectory)/apis/trips/Dockerfile'
      tag: '$(Build.BuildId)'
      
      # Agent VM image name
      vmImageName: 'ubuntu-latest'
    
    
    stages:
    # Code test
    - stage: TestGoCode
      displayName: 'Testing Go Code for Trips API`
      jobs:
      - job: downloadgo
        steps:
        - task: GoTool@0
            inputs:
            version: '1.15'
      - job: runtripsapitest
        dependsOn: downloadgo
        steps: 
        - task: Go@0
            inputs:
            command: 'test'
            arguments: '-v'
            workingDirectory: './apis/trips/tests'
      - job: createworkitem
        dependsOn: runtripsapitest
        steps:
        - task: CreateWorkItem@1
            condition: failed()
            inputs:
            workItemType: 'Issue'
            title: 'bugstofix'
    
    # Build it
    - stage: Build
      displayName: Build and push stage
      jobs:  
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
        - task: Docker@2
          displayName: Build and push an image to container registry
          inputs:
            command: buildAndPush
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
              $(tag)

    - stage: Deploy
      displayName: Deploy to app service
      jobs:
      - job: Deploy
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'OTA-PRD-1611(75159368-bf37-41f2-86ee-725899d35f50)'
              appType: 'webAppContainer'
              WebAppName: 'openhack98t80iv1userjava'
              DockerNamespace: '$(containerRegistry)'
              DockerRepository: '$(imageRepository)'
              DockerImageTag: '$(tag)'
